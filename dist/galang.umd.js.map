{"version":3,"file":"galang.umd.js","sources":["../src/ast/node.js","../src/parser/parser.js","../src/parser/token.js","../src/parser/parse_exp.js","../src/parser/parse_stat.js","../src/parser/parse_block.js","../src/parser/lexer.js","../src/interpreter/env.js","../src/interpreter/eval.js","../src/interpreter/index.js"],"sourcesContent":["export class Node {\n  constructor() {\n    // this.start = null;\n    // this.end = null;\n    // this.loc = null;\n  }\n}\n\nexport class Program extends Node {\n  constructor(params) {\n    super(params);\n    this.type = 'Program';\n    this.body = [];\n  }\n};\n\nexport class ExpressionStatement extends Node {\n  constructor(params, expression) {\n    super(params);\n    this.type = 'ExpressionStatement';\n    this.expression = expression;\n  }\n};\n\nexport class FalseExp extends Node {\n  constructor(params) {\n    super(params);\n    this.type = 'FalseExp';\n  }\n}\n\nexport class TrueExp extends Node {\n  constructor(params) {\n    super(params);\n    this.type = 'TrueExp';\n  }\n}\n\nexport class NullExp extends Node {\n  constructor(params) {\n    super(params);\n    this.type = 'NullExp';\n  }\n}\n\nexport class Numeral extends Node {\n  constructor(params, value) {\n    super(params);\n    this.type = 'Numeral';\n    this.value = value;\n  }\n}\n\nexport class StringLiteral extends Node {\n  constructor(params, value) {\n    super(params);\n    this.type = 'StringLiteral';\n    this.value = value;\n  }\n}\n\nexport class Identifier extends Node {\n  constructor(params, name) {\n    super(params);\n    this.type = 'Identifier';\n    this.name = name;\n  }\n}\n\nexport class UpdateExp extends Node {\n  constructor(params, op, argument, prefix) {\n    super(params);\n    this.type = 'UpdateExp';\n    this.op = op;\n    this.argument = argument;\n    this.prefix = prefix || false;\n  }\n}\n\nexport class UnaryExp extends Node {\n  constructor(params, op, argument) {\n    super(params);\n    this.type = 'UnaryExp';\n    this.op = op;\n    this.argument = argument;\n  }\n}\n\nexport class BinaryExp extends Node {\n  constructor(params, op, lExp, rExp) {\n    super(params);\n    this.type = 'BinaryExp';\n    this.op = op;\n    this.left = lExp;\n    this.right = rExp;\n  }\n}\n\nexport class ConditionExp extends Node {\n  constructor(params, test, consequent, alternate) {\n    super(params);\n    this.type = 'ConditionExp';\n    this.test = test;\n    this.consequent = consequent;\n    this.alternate = alternate;\n  }\n}\n\nexport class AssignmentExp extends Node {\n  constructor(params, left, right) {\n    super(params);\n    this.type = 'AssignmentExp';\n    this.left = left;\n    this.right = right;\n  }\n}\n\nexport class EmptyStat extends Node {\n  constructor(params) {\n    super(params);\n  }\n}\n\nexport class WhileStat extends Node {\n  constructor(params, test, body) {\n    super(params);\n    this.type = 'WhileStat';\n    this.test = test;\n    this.body = body;\n  }\n}\n\nexport class BlockStat extends Node {\n  constructor(params, body) {\n    super(params);\n    this.type = 'BlockStat';\n    this.body = body;\n  }\n}\n\nexport class VariableDeclaration extends Node {\n  constructor(params, kind, declarations) {\n    super(params);\n    this.type = 'VariableDeclaration';\n    this.kind = kind;\n    this.declarations = declarations;\n  }\n}\n\nexport class VariableDeclarator extends Node {\n  constructor(params, id, init) {\n    super(params);\n    this.type = 'VariableDeclarator';\n    this.id = id;\n    this.init = init;\n  }\n}\n\nexport class SwitchStatement extends Node {\n  constructor(params, discriminant, cases) {\n    super(params);\n    this.type = 'SwitchStatement';\n    this.discriminant = discriminant;\n    this.cases = cases;\n  }\n}\n\nexport class SwitchCase extends Node {\n  constructor(params, test, consequent) {\n    super(params);\n    this.type = 'SwitchCase';\n    this.test = test;\n    this.consequent = consequent;\n  }\n}\n\nexport class BreakStatement extends Node {\n  constructor(params, label) {\n    super(params);\n    this.type = 'BreakStatement';\n    this.label = label || null;\n  }\n}\n\nexport class DefaultStatement extends Node {\n  constructor(params) {\n    super(params);\n    this.type = 'DefaultStatement';\n  }\n}\n\nexport class IfStatement extends Node {\n  constructor(params, test, consequent, alternate) {\n    super(params);\n    this.type = 'IfStatement';\n    this.test = test;\n    this.consequent = consequent;\n    this.alternate = alternate;\n  }\n}\n\nexport class ForStatment extends Node {\n  constructor(params, init, test, update, body) {\n    super(params);\n    this.type = 'ForStatment';\n    this.init = init;\n    this.test = test;\n    this.update = update;\n    this.body = body;\n  }\n}\n\nexport class FunctionDeclaration extends Node {\n  constructor(option, id, params, body) {\n    super(option);\n    this.type = 'FunctionDeclaration';\n    this.id = id;\n    this.params = params;\n    this.body = body;\n  }\n}\n\nexport class ReturnStatement extends Node {\n  constructor(option, argument) {\n    super(option);\n    this.type = 'ReturnStatement';\n    this.argument = argument;\n  }\n}\n","export class Parser {\n  constructor(options) {\n    this.lexer = options.lexer;\n    this.tokens = options.tokens;\n    this.options = this.options;\n  }\n\n  parse() {\n    return this.parseTopLevel()\n  }\n\n  LookAhead () {\n    return this.lexer.LookAhead();\n  }\n\n  nextToken() {\n    return this.lexer.read();\n  }\n\n  unexpected() {}\n\n  expect (type) {\n    this.eat(type) || this.raise(`need ${type}`)\n  }\n  \n  eat(type) {\n    if (this.LookAhead() === type) {\n      this.nextToken();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  raise(msg) {\n    throw new SyntaxError(msg);\n  }\n}","export class TokenType {\n  constructor(label, opt = {}) {\n    this.label = label;\n    this.keyword = opt.keyword;\n  }\n}\n\n// keywords\nexport const keywords = {};\n\n// make keyword token\nfunction kw(name, options = {}) {\n  options.keyword = name\n  return keywords[name] = new TokenType(name, options)\n}\n\n// all token include keywords and other symbol\nexport const types = {\n  number:     new TokenType(\"number\"),\n  regexp:     new TokenType(\"regexp\"),\n  string:     new TokenType(\"string\"),\n  name:       new TokenType(\"name\"),\n  eof:        new TokenType(\"eof\"),\n\n  // Punctuation token types\n  bracketL:   new TokenType(\"[\"),\n  bracketR:   new TokenType(\"]\"),\n  braceL:     new TokenType(\"{\"),\n  braceR:     new TokenType(\"}\"),\n  parenL:     new TokenType(\"(\"),\n  parenR:     new TokenType(\")\"),\n  comma:      new TokenType(\",\"),\n  semi:       new TokenType(\";\"),\n  colon:      new TokenType(\":\"),\n  dot:        new TokenType(\".\"),\n  question:   new TokenType(\"?\"),\n\n  // OP\n  op_assign:    new TokenType(\"=\"),\n  op_assign_1:  new TokenType(\"+=\"),\n  op_assign_2:  new TokenType(\"-=\"),\n  op_assign_3:  new TokenType(\"*=\"),\n  op_assign_4:  new TokenType(\"/=\"),\n  op_assign_5:  new TokenType(\"%=\"),\n\n  op_minus:   new TokenType(\"-\"),\n  op_add:     new TokenType(\"+\"),\n  op_mul:     new TokenType(\"*\"),\n  op_div:     new TokenType(\"/\"),\n  op_mod:     new TokenType(\"%\"),\n\n  op_lt:      new TokenType(\"<\"),\n  op_le:      new TokenType(\"<=\"),\n  op_gt:      new TokenType(\">\"),\n  op_ge:      new TokenType(\">=\"),\n  \n  op_eq:      new TokenType(\"==\"),\n  op_ne:      new TokenType(\"!=\"),\n\n  op_and:     new TokenType(\"&&\"),\n  op_or:      new TokenType(\"||\"),\n  op_not:     new TokenType(\"!\"),\n\n  op_inc:     new TokenType(\"++\"),\n  op_dec:     new TokenType(\"--\"),\n\n  // keyword token types\n  _if:        kw(\"if\"),\n  _else:      kw('else'),\n  _let:       kw('let'),\n  _const:     kw('const'),\n  _for:       kw('for'),\n  _do:        kw('do'),\n  _break:     kw('break'),\n  _while:     kw('while'),\n  _continue:  kw('continue'),\n  _switch:    kw('switch'),\n  _case:      kw('case'),\n  _default:   kw('default'),\n  _function:  kw('function'),\n  _return:    kw('return'),\n  _try:       kw('try'),\n  _catch:     kw('catch'),\n  _finally:   kw('finally'),\n  _throw:     kw('throw'),\n  _null:      kw('null'),\n  _true:      kw('true'),\n  _false:     kw('false'),\n};\n\nexport const regUtil = {\n  whitespcae: /\\s/,            // 空格\n  numbers: /[0-9]/,            // 数字\n  letters: /[a-z]/i,           // 字母\n  identifier: /[_\\da-zA-Z]/i   // 标志符\n}\n","import { BinaryExp, ConditionExp, FalseExp, Identifier, NullExp, Numeral, StringLiteral, TrueExp, UnaryExp, UpdateExp, AssignmentExp } from '../ast/node';\nimport { Parser } from './parser';\nimport { types as tt } from './token';\n\n/*\n  exp         ::= expAssign\n  expAssign   ::= expCond { \"=\" expAssign }\n  expCond     ::= expOr {\"?\" expAssign \":\" expAssign }\n  expOr       ::= expAnd {'||' expAnd}\n  expAnd      ::= expQul {'&&' expQul}\n  expQul      ::= expCmp {(‘!=’ | ‘==’) expCmp}\n  expCmp      ::= expAdd {(‘<’ | ‘>’ | ‘<=’ | ‘>=’) expAdd}\n  expAdd      ::= expMul {(‘+’ | ‘-’) expMul}\n  expMul      ::= expUna {('*' | '/' | '%') expUna}\n  expUna      ::= {(‘!’ | ‘-’)} expUpt\n  expUpt      ::= expBasic {('++' | '--')}\n  expBasic    ::= null | false | true | Numeral | LiteralString | Identifier | '(' exp ')'\n*/\n\nconst pp = Parser.prototype;\n\npp.parseIdentifier = function () {\n  if (this.LookAhead() === tt.name.label) {\n    return new Identifier({}, this.nextToken().value);\n  }\n  return null;\n}\n\npp.parseBasicExp = function () {\n  switch (this.LookAhead()) {\n    case tt._true.label:\n      return new TrueExp({}, this.nextToken().value);\n    case tt._false.label:\n      return new FalseExp({}, this.nextToken().value);\n    case tt._null.label:\n      return new NullExp({}, this.nextToken().value);\n\n    case tt.number.label:\n      return new Numeral({}, this.nextToken().value);\n    case tt.string.label:\n      return new StringLiteral({}, this.nextToken().value);\n    case tt.name.label:\n      return new Identifier({}, this.nextToken().value)\n\n    case tt.parenL.label: {\n      this.nextToken();\n      let exp = this.parseExp();\n      this.eat(tt.parenR.label);\n      return exp;\n    }\n  }\n}\n\n// x++ ++x x-- --x\npp.parseUptEpx = function () {\n  switch(this.LookAhead()) {\n    case tt.op_inc.label:\n    case tt.op_dec.label: {\n      const n = new UpdateExp({}, this.nextToken().value, this.parseBasicExp());\n      n.prefix = true;\n      return n;\n    }\n  }\n\n  let exp = this.parseBasicExp();\n\n  switch(this.LookAhead()) {\n    case tt.op_inc.label:\n    case tt.op_dec.label:\n      return new UpdateExp({}, this.nextToken().value, exp);\n  }\n\n  return exp;\n}\n\n// (- | !) x\npp.parseUnaExp = function () {\n  switch(this.LookAhead()) {\n    case tt.op_not.label:\n    case tt.op_minus.label:\n      return new UnaryExp({}, this.nextToken().value, this.parseUnaExp());\n  }\n  return this.parseUptEpx();\n}\n\n// x (* | / | %) y\npp.parseMulExp = function () {\n  let exp = this.parseUnaExp();\n  while(this.LookAhead() !== tt.eof.label) {\n    switch(this.LookAhead()) {\n      case tt.op_mod.label:\n      case tt.op_div.label:\n      case tt.op_mul.label:\n        exp = new BinaryExp({}, this.nextToken().value, exp, this.parseUnaExp());\n        break;\n      default:\n        return exp;\n    }\n  }\n  return exp;\n}\n\n// x (+ | -) y\npp.parseAddExp = function () {\n  let exp = this.parseMulExp();\n  while(this.LookAhead() !== tt.eof.label) {\n    switch(this.LookAhead()) {\n      case tt.op_add.label:\n      case tt.op_minus.label: {\n        exp = new BinaryExp({}, this.nextToken().value, exp, this.parseMulExp());\n        break;\n      }\n      default:\n        return exp;\n    }\n  }\n  return exp;\n}\n\n// x (> | >= | < | <=) y\npp.parseCmpExp = function () {\n  let exp = this.parseAddExp();\n  switch(this.LookAhead()) {\n    case tt.op_lt.label:\n    case tt.op_le.label:\n    case tt.op_ge.label:\n    case tt.op_gt.label:\n      return new BinaryExp({}, this.nextToken().value, exp, this.parseCmpExp());\n  }\n  return exp;\n}\n\n// x == y\n// x != y\npp.parseQulExp = function () {\n  let exp = this.parseCmpExp();\n  switch(this.LookAhead()) {\n    case tt.op_eq.label:\n    case tt.op_ne.label:\n      return new BinaryExp({}, this.nextToken().value, exp, this.parseQulExp());\n  }\n  return exp;\n}\n\n// x && y\npp.parseAndExp = function () {\n  let exp = this.parseQulExp();\n  switch(this.LookAhead()) {\n    case tt.op_and.label:\n      return new BinaryExp({}, this.nextToken().value, exp, this.parseAndExp());\n  }\n  return exp;\n}\n\n// x || y\npp.parseOrExp = function () {\n  let exp = this.parseAndExp();\n  switch(this.LookAhead()) {\n    case tt.op_or.label:\n      return new BinaryExp({}, this.nextToken().value, exp, this.parseOrExp());\n  }\n  return exp;\n}\n\n// x ? y : z\npp.parseConditional = function() {\n  let exp = this.parseOrExp();\n  while (this.LookAhead() && this.LookAhead() == tt.question.label) {\n    this.nextToken()\n    const consequent = this.parseAssignExp()\n    if (this.LookAhead() && this.LookAhead() == tt.colon.label) {\n      this.nextToken()\n      const alternate = this.parseAssignExp()\n      exp = new ConditionExp({}, exp, consequent, alternate)\n    } else {\n      this.raise('parseConditional error')\n    }\n  }\n  return exp;\n}\n\n// x = exp\npp.parseAssignExp = function () {\n  let exp = this.parseConditional();\n  if (this.LookAhead()) {\n    switch (this.LookAhead()) {\n      case tt.op_assign.label:\n      case tt.op_assign_1.label:\n      case tt.op_assign_2.label:\n      case tt.op_assign_3.label:\n      case tt.op_assign_4.label:\n      case tt.op_assign_5.label: {\n        if (exp.type !== \"Identifier\") {\n          this.raise(\"Invalid left-hand side in assignment\");\n        }\n        this.nextToken()\n        exp = new AssignmentExp({}, exp, this.parseAssignExp())\n      }\n    }\n  }\n  return exp\n}\n\npp.parseExp = function() {\n  return this.parseAssignExp();\n}","import { Parser } from './parser'\nimport {\n  EmptyStat,\n  ExpressionStatement,\n  ForStatment,\n  FunctionDeclaration,\n  Identifier,\n  IfStatement,\n  Program,\n  ReturnStatement,\n  SwitchCase,\n  SwitchStatement,\n  VariableDeclaration,\n  VariableDeclarator,\n  WhileStat,\n} from '../ast/node'\nimport { types as tt } from './token'\n\nconst pp = Parser.prototype\n\n/*\nstat ::=  ‘;’\n\t| WhileStat https://www.processon.com/diagraming/60bbcba00e3e7468f4b8af35\n  | VariableDeclaration https://www.processon.com/diagraming/60b9de0ee401fd4c8ba4beaf\n  | SwitchStat https://www.processon.com/diagraming/60bbccf4637689502feab733\n  | BreakStatement\n  | IfStatment https://www.processon.com/diagraming/60bc7f337d9c0879370ed5f0\n  | ForStatment https://www.processon.com/diagraming/60bcd33d7d9c0879370f61a4\n  | FunctionDeclaration https://www.processon.com/diagraming/60bd8bb30791297a3f01ba38\n*/\n\n// if semicolon exit then eat it\npp.semicolon = function () {\n  this.eat(tt.semi.label)\n}\n\npp.parseTopLevel = function () {\n  const node = new Program()\n  while (this.lexer.LookAhead() !== tt.eof.label) {\n    let stmt = this.parseStatement()\n    node.body.push(stmt)\n  }\n  return node\n}\n\npp.parseStatement = function () {\n  debugger\n  switch (this.LookAhead()) {\n    case tt.semi.label:\n      return this.parseEmptyStatement()\n    case tt.braceL.label:\n      return this.parseBlock()\n    case tt._while.label:\n      return this.parseWhileStatement()\n    case tt._let.label:\n      return this.parseVarStatement()\n    case tt._switch.label:\n      return this.parseSwitchStat()\n    case tt._if.label:\n      return this.parseIfStat()\n    case tt._for.label:\n      return this.parseForStatement()\n    case tt._function.label:\n      return this.parseFunctionStatement()\n    case tt._return.label:\n      return this.parseReturnStatement()\n    default:\n      return this.parseExpressionStatement()\n  }\n}\n\npp.parseExpressionStatement = function () {\n  const node = new ExpressionStatement({}, this.parseExp())\n  this.semicolon()\n  return node\n}\n\npp.parseEmptyStatement = function () {\n  this.expect(tt.semi.label);\n  return new EmptyStat()\n}\n\npp.parseWhileStatement = function () {\n  this.eat(tt._while.label)\n  let test = this.parseExp()\n  let block = this.parseBlock()\n  return new WhileStat({}, test, block)\n}\n\npp.parseVarStatement = function () {\n  const kind = this.nextToken().value\n  const varList = this.parseVar()\n  this.semicolon();\n  return new VariableDeclaration({}, kind, varList)\n}\n\npp.parseVar = function () {\n  let list = []\n  for (;;) {\n    let decl = new VariableDeclarator()\n    decl.id = this.parseVarId()\n    if (this.eat(tt.op_assign.label)) {\n      decl.init = this.parseExp()\n    } else {\n      decl.init = null\n    }\n    list.push(decl)\n    if (!this.eat(tt.comma.label)) break\n  }\n  return list\n}\n\npp.parseVarId = function () {\n  if (this.LookAhead() === tt.name.label) {\n    return new Identifier({}, this.nextToken().value)\n  } else {\n    this.raise('invalid Identifier')\n  }\n}\n\npp.parseSwitchStat = function () {\n  this.expect(tt._switch.label)\n  this.expect(tt.parenL.label)\n\n  const discriminant = this.parseExp()\n\n  this.expect(tt.parenR.label)\n  this.expect(tt.braceL.label)\n\n  let cases = []\n  let cur = null\n\n  for (let sawDefault = false; this.LookAhead() !== tt.braceR.label; ) {\n    let type = this.LookAhead()\n    let isCase = type === tt._case.label\n    let isDefualt = type === tt._default.label\n    if (isCase || isDefualt) {\n      let test = null\n      this.nextToken()\n      if (isCase) {\n        test = this.parseExp()\n      } else {\n        sawDefault = true\n      }\n      this.expect(tt.colon.label)\n      cur = new SwitchCase({}, test, [])\n      cases.push(cur)\n    } else {\n      cur.consequent.push(this.parseStatement())\n    }\n  }\n  this.expect(tt.braceR.label)\n  return new SwitchStatement({}, discriminant, cases)\n}\n\n// if a > a\npp.parseIfStat = function () {\n  this.expect(tt._if.label)\n  this.expect(tt.parenL.label)\n  let test = this.parseExp()\n  this.expect(tt.parenR.label)\n\n  let alternate = null\n  let consequent = null\n\n  if (!(consequent = this.parseStatement())) {\n    this.raise('Unexpected end of input')\n  }\n\n  if (this.LookAhead() === tt._else.label) {\n    this.nextToken()\n    if (this.LookAhead() === tt._if.label) {\n      alternate = this.parseIfStat()\n    } else {\n      alternate = this.parseStatement()\n    }\n    if (!alternate) {\n      this.raise('Unexpected end of input')\n    }\n  }\n\n  return new IfStatement({}, test, consequent, alternate)\n}\n\npp.parseForStatement = function () {\n  this.expect(tt._for.label)\n  this.expect(tt.parenL.label)\n\n  let init = null\n\n  if (this.LookAhead() === tt._let.label) {\n    init = this.parseVarStatement()\n  } else if (this.LookAhead() === tt.semi.label) {\n    init = null\n  } else {\n    init = this.parseExp()\n  }\n\n  this.expect(tt.semi.label)\n\n  let test = this.LookAhead() === tt.semi.label ? null : this.parseExp()\n\n  this.expect(tt.semi.label)\n\n  let update = this.LookAhead() === tt.parenR.label ? null : this.parseExp()\n\n  this.expect(tt.parenR.label)\n\n  let body = this.parseBlock()\n\n  return new ForStatment({}, init, test, update, body)\n}\n\npp.parseFunctionStatement = function () {\n  this.expect(tt._function.label)\n  const node = new FunctionDeclaration({}, null, [], null)\n\n  node.id = this.parseIdentifier()\n  if (node.id === null) {\n    this.raise('unexpected identifier')\n  }\n  this.expect(tt.parenL.label)\n\n  if (this.LookAhead() === tt.parenR.label) {\n    node.params = []\n  } else {\n    const getId = () => {\n      let id = this.parseIdentifier()\n      if (id === null) {\n        this.raise('unexpected identifier')\n      } else {\n        node.params.push(id)\n      }\n    }\n    getId()\n    while (this.LookAhead() === tt.comma.label) {\n      this.nextToken()\n      getId()\n    }\n  }\n\n  this.expect(tt.parenR.label)\n\n  node.body = this.parseBlock()\n\n  return node\n}\n\npp.parseReturnStatement = function () {\n  const node = new ReturnStatement({}, null)\n  this.expect(tt._return.label)\n  if (!this.eat(tt.semi.label)) {\n    node.argument = this.parseExp()\n  }\n  this.semicolon()\n  return node\n}\n","import { BlockStat } from '../ast/node'\nimport { Parser } from './parser'\nimport { types as tt } from './token'\n\nconst pp = Parser.prototype\n\npp.parseBlock = function () {\n  this.eat(tt.braceL.label)\n  const stats = []\n  while (\n    this.LookAhead() !== tt.eof.label &&\n    this.LookAhead() !== tt.braceR.label\n  ) {\n    let stmt = this.parseStatement()\n    stats.push(stmt)\n  }\n  this.eat(tt.braceR.label)\n\n  return new BlockStat({}, stats)\n}\n\n","import { regUtil, types, keywords } from './token'\n\nexport class Token {\n  constructor(type, value) {\n    this.type = type || ''\n    this.value = value || ''\n    this.loc = null\n  }\n}\n\nexport class Lexer {\n  constructor(input) {\n    this.current = 0\n    this.input = input\n  }\n\n  /**\n   * @desc 是否为关键字\n   * @param {*} str\n   * @returns\n   */\n  isKeyword(str) {\n    return Object.keys(keywords).includes(str)\n  }\n\n  /**\n   * @desc 获取 token 列表\n   * @returns\n   */\n  tokenize() {\n    let token,\n      tokens = []\n    while ((token = this.read())) {\n      tokens.push(token)\n      if (token.type === types.eof.label) break\n    }\n    return tokens\n  }\n\n  /**\n   * @desc 过滤无效字符\n   */\n  skipSpaceAndComment() {\n    while (!this.isEof()) {\n      const ch = this.input[this.current]\n      const newline = /[\\n\\r]/\n      if (ch === '/') {\n        if (this.input[this.current + 1] === '/') {\n          this.current += 2\n          while (!this.isEof() && !newline.test(this.input[this.current])) {\n            this.current++\n          }\n        } else if (this.input[this.current + 1] === '*') {\n          const i = this.input.indexOf('*/', this.current + 2)\n          if (i < 0) {\n            this.raise(this.current - 2, 'Unterminated comment')\n          }\n          this.current = i + 2\n        } else {\n          break\n        }\n      } else if (\n        ch === '\\n' ||\n        ch === '\\t' ||\n        ch === ' ' ||\n        ch === '\\r' ||\n        ch === '\\f'\n      ) {\n        this.current++\n      } else {\n        break\n      }\n    }\n  }\n\n  /**\n   * @desc 读取一个字符，并且指针往下移\n   * @returns\n   */\n  getChar() {\n    if (this.current === this.input.length) {\n      return null\n    }\n\n    let start = this.current\n    this.current++\n    return this.input[start]\n  }\n\n  /**\n   * @desc 指针回退\n   */\n  unGetChar() {\n    this.current -= 1\n  }\n\n  /**\n   * @desc 读取 1 个 token\n   * @returns\n   */\n  read() {\n    this.skipSpaceAndComment()\n    let mchar = this.getChar()\n\n    if (mchar == null) {\n      return this.genToken(types.eof)\n    }\n\n    switch (mchar) {\n      case '(': {\n        return this.genToken(types.parenL, mchar, this.current - 1)\n      }\n      case ')': {\n        return this.genToken(types.parenR, mchar, this.current - 1)\n      }\n      case '{': {\n        return this.genToken(types.braceL, mchar, this.current - 1)\n      }\n      case '}': {\n        return this.genToken(types.braceR, mchar, this.current - 1)\n      }\n      case ';': {\n        return this.genToken(types.semi, mchar, this.current - 1)\n      }\n      case ':': {\n        return this.genToken(types.colon, mchar, this.current - 1)\n      }\n      case '?': {\n        return this.genToken(types.question, mchar, this.current - 1)\n      }\n      case ',': {\n        return this.genToken(types.comma, mchar, this.current - 1)\n      }\n\n      // == 或 =\n      case '=': {\n        if (this.getChar() === '=') {\n          return this.genToken(types.op_eq, '==', this.current - 2)\n        } else {\n          this.unGetChar()\n          return this.genToken(types.op_assign, '=', this.current - 1)\n        }\n      }\n\n      // != 或 !\n      case '!': {\n        if (this.getChar() === '=') {\n          return this.genToken(types.op_ne, '!=', this.current - 2)\n        } else {\n          this.unGetChar()\n          return this.genToken(types.op_not, '!', this.current - 1)\n        }\n      }\n\n      // || 或 &&\n      case '&':\n      case '|': {\n        if (this.getChar() === mchar) {\n          const type = mchar === '&&' ? types.op_and : types.op_or\n          return this.genToken(type, mchar + mchar, this.current - 2)\n        } else {\n          throw new Error(\n            'invalid character:' + mchar + ' in ' + this.current - 2\n          )\n        }\n      }\n\n      // ++ += +\n      // -- -= -\n      case '-':\n      case '+': {\n        let start = this.current - 1\n        let next = this.getChar()\n        if (next === mchar) {\n          const t = mchar === '+' ? types.op_inc : types.op_dec\n          return this.genToken(t, mchar + mchar, start)\n        } else if (next === '=') {\n          return this.genToken(types.op_assign, mchar + '=', start)\n        } else {\n          if (mchar !== null) this.unGetChar()\n          const t = mchar === '+' ? types.op_add : types.op_minus\n          return this.genToken(t, mchar, start)\n        }\n      }\n\n      // /= /\n      // *= *\n      case '/':\n      case '*': {\n        let start = this.current - 1\n        let next = this.getChar()\n        if (next === '=') {\n          return this.genToken(types.op_assign, mchar + '=', start)\n        } else {\n          if (mchar !== null) this.unGetChar()\n          const t = mchar === '*' ? types.op_mul : types.op_div\n          return this.genToken(t, mchar, start)\n        }\n      }\n\n      default:\n        // 数字\n        if (regUtil.numbers.test(mchar)) {\n          let value = ''\n          let start = this.current - 1\n          while (mchar !== null && regUtil.numbers.test(mchar)) {\n            value += mchar\n            mchar = this.getChar()\n          }\n          if (mchar !== null) {\n            this.unGetChar()\n          }\n          return this.genToken(types.number, value, start)\n        }\n\n        // 字符串\n        if (mchar === '\"' || mchar === \"'\") {\n          let value = ''\n          let type = mchar\n          let start = this.current - 1\n          let ch = this.getChar()\n\n          while (ch !== null && ch !== type) {\n            value += ch\n            ch = this.getChar()\n          }\n\n          if (ch !== mchar) {\n            throw new TypeError('unclosed double quote in ' + start)\n          }\n\n          return this.genToken(types.string, value, start)\n        }\n\n        // 关键字 | 变量名\n        if (regUtil.letters.test(mchar) || mchar === '_') {\n          let value = ''\n          let start = this.current - 1\n          while (mchar !== null && regUtil.identifier.test(mchar)) {\n            value += mchar\n            mchar = this.getChar()\n          }\n          if (mchar !== null) {\n            this.unGetChar()\n          }\n\n          if (this.isKeyword(value)) {\n            return this.genToken(keywords[value], value, start)\n          }\n\n          return this.genToken(types.name, value, start)\n        }\n\n        throw new TypeError('unknown character: ' + mchar)\n    }\n  }\n\n  /**\n   * @desc 前瞻一个 token\n   * @returns\n   */\n  LookAhead() {\n    const token = this.read()\n    if (token && token.loc) {\n      this.current = token.loc.start\n    }\n    return token.type\n  }\n\n  /**\n   * @desc 创建一个 token\n   * @param {*} type\n   * @param {*} value\n   * @param {*} start\n   * @returns\n   */\n  genToken(type, value, start) {\n    const token = new Token(type.keyword || type.label, value)\n    if (start !== undefined) {\n      token.loc = {\n        start,\n        end: token.value.length + start,\n      }\n    }\n    return token\n  }\n\n  raise(pos, message) {\n    throw new SyntaxError(message + ` in ${pos}`)\n  }\n\n  /**\n   * @desc 是否读完\n   * @returns\n   */\n  isEof() {\n    return this.current === this.input.length\n  }\n}\n","let envId = 0;\nexport class Env {\n  constructor(prev) {\n    this.prev = prev || null;\n    this.store = {}\n    this.id = envId++;\n  }\n\n  /**\n   * @desc 查询 key 值, key 需要先声明，否则抛出异常\n   * @param {string} key \n   * @returns \n   */\n  get(key) {\n    let env = this.findEnv(key);\n    if (env) {\n      return env.store[key];\n    } else {\n      throw new SyntaxError(\"undefined \" + key);\n    }\n  }\n\n  /**\n   * 查询作用域\n   * @param {string}} key \n   * @returns \n   */\n  findEnv (key) {\n    let env = this;\n    while(env) {\n      let keys = Object.keys(env.store);\n      if (keys.includes(key)) {\n        return env;\n      } else {\n        env = env.prev;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @desc 更新 key 值, key 需要先声明，否则抛出异常\n   * @param {string} key \n   * @returns \n   */\n  update(key, value) {\n    let env = this.findEnv(key);\n    if (env) {\n      env.store[key] = value;\n    } else {\n      throw new SyntaxError(`${key} is not defined`);\n    }\n  }\n\n  /**\n   * 在当前环境中，添加 key，需要检查是否重复声明\n   * @param {string} key \n   * @param {*} value \n   */\n  add(key, value) {\n    if (Object.keys(this.store).includes(key)) {\n      throw new SyntaxError(`${key} has been declared`);\n    } else {\n      this.store[key] = value;\n    }\n  }\n}\n","import { Env } from './env';\n\nexport function ProgramEval(env, node) {\n  node.body.forEach(it => {\n    StatementEval(env, it);\n  });\n}\n\nexport function StatementEval(env, node) {\n  switch(node.type) {\n    case 'VariableDeclaration':\n      return VariableDeclarationEval(env, node);\n    case 'BlockStat':\n      return BlockStatementEval(env, node);\n    default:\n      return ExpressionStatementEval(env, node);\n  }\n}\n\nexport function ExpressionStatementEval(env, node) {\n  switch(node.type) {\n    case 'FalseExp':\n      return false;\n    case 'TrueExp':\n      return true;\n    case 'NullExp':\n      return null;\n    case 'Numeral':\n      return Number(node.value);\n    case 'StringLiteral':\n      return node.value;\n    case 'Identifier':\n      return IdentifierEval(env, node);\n    case 'UpdateExp':\n      return UpdateExpEval(env, node);\n    case 'UnaryExp':\n      return UnaryExpEval(env, node);\n    case \"ExpressionStatement\":\n      return ExpressionStatementEval(env, node.expression)\n    case \"BinaryExp\":\n      return BinaryExpEval(env, node);\n    \n    case \"AssignmentExp\":\n      return AssignmentExpEval(env, node);\n\n    case 'BlockStatement':\n      return BlockStatementEval(env, node);\n  }\n}\n\nexport function IdentifierEval(env, node) {\n  return env.get(node.name);\n}\n\nexport function UpdateExpEval (env, node) {\n  if (node.op == \"++\") {\n    let oVal = IdentifierEval(env, node.argument)\n    let nVal = oVal + 1;\n    env.update(node.argument.name, nVal);\n    return node.prefix ? nVal : oVal;\n  } else {\n    let oVal = IdentifierEval(env, node.argument)\n    let nVal = oVal - 1;\n    env.update(node.argument.name, nVal);\n    return node.prefix ? nVal : oVal;\n  }\n}\n\nexport function UnaryExpEval (env, node) {\n  switch(node.op) {\n    case \"-\":\n      return -(ExpressionStatementEval(env, node.argument));\n    case \"!\":\n      return !(ExpressionStatementEval(env, node.argument));\n  }\n}\n\nexport function VariableDeclarationEval (env, node) {\n  node.declarations.forEach(it => {\n    env.add(it.id.name, ExpressionStatementEval(env, it.init))\n  })\n}\n\nexport function BinaryExpEval (env, node) {\n  switch(node.op) {\n    case \"+\":\n      return ExpressionStatementEval(env, node.left) + ExpressionStatementEval(env, node.right)\n    case \"-\":\n      return ExpressionStatementEval(env, node.left) - ExpressionStatementEval(env, node.right)\n    case \"*\":\n      return ExpressionStatementEval(env, node.left) * ExpressionStatementEval(env, node.right)\n    case \"/\":\n      return ExpressionStatementEval(env, node.left) / ExpressionStatementEval(env, node.right)\n    case \"%\":\n      return ExpressionStatementEval(env, node.left) % ExpressionStatementEval(env, node.right)\n  }\n}\n\nexport function BlockStatementEval(env, node) {\n  const _env = new Env(env);\n  node.body.forEach(it => {\n    StatementEval(_env, it);\n  });\n}\n\nexport function AssignmentExpEval(env, node) {\n  return env.update(node.left.name, StatementEval(env, node.right))\n}\n\nexport function FunctionDeclaration(env, node) {}\n","import { Env } from './env';\nimport { ProgramEval } from './eval';\n\n// global env\nconst env = new Env(null);\n\n// entry\nexport function interpreter(program) {\n  ProgramEval(env, program);\n  console.log(env.store);\n}\n"],"names":["super","const","pp","tt","let","this","t","start","next","value","type","oVal","nVal"],"mappings":"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"}